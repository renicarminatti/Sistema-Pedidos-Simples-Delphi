unit Model.Conexao.Firedac;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Phys.MySQLDef, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf,
  FireDAC.Stan.Def, FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys,
  FireDAC.Phys.MySQL, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, Model.Conexao.Interfaces;

type

    TModelConexaoFiredac = class (TInterfacedObject, iModelConexao)
    private
        FConexao : TFDConnection;
    public
       constructor Create;
       destructor Destroy; override;
       class function New : iModelConexao;
       function Connection : TFDCustomConnection;
    end;

implementation

{ TModelConexaoFiredac }

function TModelConexaoFiredac.Connection: TFDCustomConnection;
begin
    Result := FConexao;
end;

constructor TModelConexaoFiredac.Create;
begin
    FConexao := TFDConnection.Create(nil);
    FConexao.Params.DriverID := 'MySQL';
    FConexao.Params.Add('Server=127.0.0.1');
    FConexao.Params.Add('Port=3306');
    FConexao.Params.Database := 'db';
    FConexao.Params.UserName := 'pedidos';
    FConexao.Params.Password := 'pedidos';
    FConexao.LoginPrompt := False;
    FConexao.Connected := True;
end;

destructor TModelConexaoFiredac.Destroy;
begin
    FConexao.DisposeOf;
    inherited;
end;

class function TModelConexaoFiredac.New: iModelConexao;
begin
    Result := Self.Create
end;


end.
